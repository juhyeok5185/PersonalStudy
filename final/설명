*Dynamic Web의 문제점
	1.기본적으로 빌드도구가 비활성화
 		JDK : 개발용 자바
 		JRE : 실행용 자바
 
 		bytecode : JRE에서 실행할수있는 실행 프로그램 표현 방식
 					우리가 작성한 소스는 바이트코드로 번역한 다음 실행가능하다
 			
 		compile : 내가 작성한 소스를 바이트콬드로 번역
 		build : 내가 작성한 코드 + 의존하는 라이브러리를 묶어 실행프로그램을 만든다.
 				메이븐은 의존성 관리도구(빌드 도구)라고 한다.
 				프로그램을 개발하는 환경과 운용환경(배포)은 다르다.  
 		
		배포 형식
			jar : 자바의 배포형식 (export) 
			war : 서버에서 실행가능한 배포형식(서버가 있어야만 실행이 된다)
			
	2.서버가 있어야만 실행가능하다.
		웹서버 : 요청 접수 + 정적인 요청(html, css , js, 이미지)를 처리
		웹 애플리케이션 서버(WAS) : 자바코드를 실행해 동적인 내용을 생성하는 서버 (tomcat)
							Servlet, JSP : WAS가 실행해 줄 수 있는 표준
							WAS는 서블릿 컨테이너 , JSP  컨테이너
							
	3.객체 의존성을 알아서 관리해야 한다.
		처리하는 객체는 여러개 만들 필요가 없다.
			TodoDao 를 싱글톤 또는 static으로 알아서 만들어야 한다.
			ObjectMapper는 new를 했는데 이렇게 작업하면 같은 객체가 여기저기서 만들어진다.
		즉 프로그래머가 알아서 객체를 관리해야한다.
			정확한 객체, 싱글톤이 보장되지 않는다.
			어떤 개발자는 new ObjectMapper(), 다른 개발자는 new Gson()으로 작업했다면
			JSON출력 형식이 각각 달라지게 된다.
		개발환경을 통일하기가 쉽지 않다.
	